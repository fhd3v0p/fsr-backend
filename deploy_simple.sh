#!/bin/bash

# –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è FSR API —Å–µ—Ä–≤–µ—Ä–∞
echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ FSR API —Å–µ—Ä–≤–µ—Ä–∞..."

# –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
pip install -r requirements.txt

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
echo "üíæ –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup.$(date +%Y%m%d_%H%M%S)

# –ù–∞—Ö–æ–¥–∏–º –∏ –∑–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é fsr.agency –≤—Ä—É—á–Ω—É—é
echo "‚öôÔ∏è –û–±–Ω–æ–≤–ª—è–µ–º nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
cat > /tmp/nginx_update.py << 'EOF'
#!/usr/bin/env python3

with open('/etc/nginx/sites-available/default', 'r') as f:
    content = f.read()

# –ù–∞—Ö–æ–¥–∏–º –Ω–∞—á–∞–ª–æ –∏ –∫–æ–Ω–µ—Ü —Å–µ–∫—Ü–∏–∏ fsr.agency
start_marker = 'server_name www.fsr.agency fsr.agency; # managed by Certbot'
end_marker = '    listen [::]:443 ssl; # managed by Certbot'

# –ù–∞—Ö–æ–¥–∏–º –ø–æ–∑–∏—Ü–∏–∏
start_pos = content.find(start_marker)
if start_pos == -1:
    print("–ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å–µ–∫—Ü–∏—è fsr.agency")
    exit(1)

# –ò—â–µ–º –Ω–∞—á–∞–ª–æ server –±–ª–æ–∫–∞
server_start = content.rfind('server {', 0, start_pos)
if server_start == -1:
    print("–ù–µ –Ω–∞–π–¥–µ–Ω server –±–ª–æ–∫")
    exit(1)

# –ò—â–µ–º –∫–æ–Ω–µ—Ü server –±–ª–æ–∫–∞
brace_count = 0
end_pos = server_start
for i in range(server_start, len(content)):
    if content[i] == '{':
        brace_count += 1
    elif content[i] == '}':
        brace_count -= 1
        if brace_count == 0:
            end_pos = i + 1
            break

# –ù–æ–≤–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è fsr.agency
new_config = '''    server {
        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;
        server_name www.fsr.agency fsr.agency; # managed by Certbot

        # API –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è Flask —Å–µ—Ä–≤–µ—Ä–∞
        location /api/ {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_request_buffering off;
            client_max_body_size 10M;
        }

        # Health check –¥–ª—è API
        location /health {
            proxy_pass http://127.0.0.1:5000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            try_files $uri $uri/ =404;
        }

        listen [::]:443 ssl; # managed by Certbot
        listen 443 ssl; # managed by Certbot
        ssl_certificate /etc/letsencrypt/live/fsr.agency/fullchain.pem; # managed by Certbot
        ssl_certificate_key /etc/letsencrypt/live/fsr.agency/privkey.pem; # managed by Certbot
        include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
    }'''

# –ó–∞–º–µ–Ω—è–µ–º —Å–µ–∫—Ü–∏—é
new_content = content[:server_start] + new_config + content[end_pos:]

# –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ
with open('/etc/nginx/sites-available/default', 'w') as f:
    f.write(new_content)

print("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º Python —Å–∫—Ä–∏–ø—Ç
python3 /tmp/nginx_update.py

if [ $? -eq 0 ]; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx..."
    nginx -t
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
        
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º nginx..."
        systemctl reload nginx
        
        # –ö–æ–ø–∏—Ä—É–µ–º systemd —Å–µ—Ä–≤–∏—Å
        echo "üìã –ö–æ–ø–∏—Ä—É–µ–º systemd —Å–µ—Ä–≤–∏—Å..."
        cp fsr-api.service /etc/systemd/system/
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd
        echo "üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd..."
        systemctl daemon-reload
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Å–µ—Ä–≤–∏—Å –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω
        echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π API —Å–µ—Ä–≤–∏—Å..."
        systemctl stop fsr-api 2>/dev/null || true
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º API —Å–µ—Ä–≤–∏—Å..."
        systemctl enable fsr-api
        systemctl start fsr-api
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        echo "üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤..."
        systemctl status fsr-api --no-pager -l
        
        echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
        echo "üåê API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://fsr.agency/api/"
        echo "üíö Health check: https://fsr.agency/health"
        
    else
        echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx!"
        echo "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é..."
        cp /etc/nginx/sites-available/default.backup.* /etc/nginx/sites-available/default
        exit 1
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!"
    exit 1
fi 