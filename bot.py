import asyncio
import logging
import gc
import time
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, BotCommand, WebAppInfo
from aiogram.utils.keyboard import InlineKeyboardBuilder
from aiogram.enums import ParseMode
import os
from dotenv import load_dotenv
from database import Database
from logger import TelegramLogger

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=os.getenv('BOT_TOKEN'))
dp = Dispatcher()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –ª–æ–≥–≥–µ—Ä–∞
db = Database()
telegram_logger = TelegramLogger()

# ID –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
admin_ids = [int(os.getenv('ADMIN_CHAT_ID', '0'))]

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
WEBAPP_URL = 'https://FSR.agency'
GIVEAWAY_LINK = os.getenv('GIVEAWAY_LINK', 'https://t.me/addlist/f3YaeLmoNsdkYjVl')

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL —Å –≤–µ—Ä—Å–∏–µ–π –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞
def get_webapp_url_with_version():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç URL —Å –≤–µ—Ä—Å–∏–µ–π –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—ç—à–∞"""
    version = int(time.time())  # –ò—Å–ø–æ–ª—å–∑—É–µ–º timestamp –∫–∞–∫ –≤–µ—Ä—Å–∏—é
    return f"{WEBAPP_URL}?v={version}"

# –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ –¥–ª—è –º–µ–Ω—é
async def set_bot_commands():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞ –≤ –º–µ–Ω—é"""
    commands = [
        BotCommand(command="start", description="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å FSR"),
        BotCommand(command="giveaway", description="üéÅ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤"),
        BotCommand(command="invite", description="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π"),
        BotCommand(command="help", description="‚ùì –°–ø—Ä–∞–≤–∫–∞"),
    ]
    
    if admin_ids[0] != 0:  # –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω –∞–¥–º–∏–Ω
        commands.append(BotCommand(command="stats", description="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–∞–¥–º–∏–Ω)"))
    
    await bot.set_my_commands(commands)

# –°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
def get_webapp_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ inline-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App"""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text="üåü Open FSR",
            web_app=types.WebAppInfo(url=WEBAPP_URL)
        )
    )
    return builder.as_markup()

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≥–∏–≤–µ–≤–µ—è
def get_giveaway_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è –≥–∏–≤–µ–≤–µ—è"""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(
            text="üìÅ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–∞–ø–∫—É",
            url=GIVEAWAY_LINK
        )
    )
    builder.add(
        InlineKeyboardButton(
            text="üåü Open FSR",
            web_app=types.WebAppInfo(url=WEBAPP_URL)
        )
    )
    return builder.as_markup()

@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    last_name = message.from_user.last_name
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –≤ –∫–æ–º–∞–Ω–¥–µ
    referred_by = None
    if len(message.text.split()) > 1:
        ref_code = message.text.split()[1]
        if ref_code.startswith('ref'):
            referred_by = ref_code[3:]  # –£–±–∏—Ä–∞–µ–º 'ref' –ø—Ä–µ—Ñ–∏–∫—Å
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db.add_user(user_id, username, first_name, last_name, referred_by)
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—à–µ–ª –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ ‚Äî –Ω–∞—á–∏—Å–ª—è–µ–º –±–∏–ª–µ—Ç –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º—É
    if referred_by:
        try:
            inviter_id = int(referred_by)
            invitee_id = user_id
            db.add_ticket_for_referral_start(inviter_id, invitee_id)
        except Exception as e:
            print(f"Error adding ticket for referral: {e}")
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ—Ñ–µ—Ä–∞–ª–µ
    if referred_by:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        try:
            inviter_info = db.get_user_stats(int(referred_by))
            if inviter_info:
                inviter_username = inviter_info.get('username', '–±–µ–∑ username')
                inviter_name = inviter_info.get('first_name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
                inviter_id = inviter_info.get('user_id')
                ref_info_text = f"–ü—Ä–∏–≥–ª–∞—à–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {inviter_name} (@{inviter_username}) ID: {inviter_id}"
            else:
                ref_info_text = f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: {referred_by} (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω)"
        except Exception as e:
            ref_info_text = f"–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: {referred_by} (–æ—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e})"
    else:
        ref_info_text = "–ü—Ä–∏—à–µ–ª –±–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏"
    
    asyncio.create_task(telegram_logger.log_user_action(
        user_id, username, first_name, "start", ref_info_text
    ))
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üåü Open FSR",
        web_app=WebAppInfo(url=WEBAPP_URL)
    ))
    builder.add(InlineKeyboardButton(
        text="üìÅ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–∞–ø–∫—É",
        url=GIVEAWAY_LINK
    ))
    
    welcome_text = f"""
üéâ –ü—Ä–∏–≤–µ—Ç, {first_name or '–¥—Ä—É–≥'}!

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ **Fresh Style Russia** - –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –ª—É—á—à–∏—Ö –∞—Ä—Ç–∏—Å—Ç–æ–≤!

üéØ **–ß—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å:**
‚Ä¢ AI-–ø–æ–∏—Å–∫ –∞—Ä—Ç–∏—Å—Ç–æ–≤ –ø–æ —Ñ–æ—Ç–æ
‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º
‚Ä¢ –†–æ–∑—ã–≥—Ä—ã—à –ø—Ä–∏–∑–æ–≤ –Ω–∞ 170,000‚ÇΩ
‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å –±–æ–Ω—É—Å–∞–º–∏

üöÄ –ù–∞–∂–º–∏ "Open FSR" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
    """
    
    await message.answer(welcome_text, reply_markup=builder.as_markup(), parse_mode=ParseMode.MARKDOWN)

@dp.message(Command("giveaway"))
async def cmd_giveaway(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /giveaway"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    asyncio.create_task(telegram_logger.log_user_action(
        user_id, username, first_name, "giveaway", "User requested giveaway info"
    ))
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ä–∫–∞—Ö
    prizes = db.get_giveaway_prizes()
    
    prizes_text = "üéÅ **–ü–†–ò–ó–´ –ì–ò–í–ï–í–ï–Ø:**\n\n"
    total_value = 0
    
    for prize in prizes:
        prizes_text += f"üíé **{prize['name']}**\n"
        prizes_text += f"‚îî {prize['description']}\n"
        prizes_text += f"‚îî üí∞ –°—Ç–æ–∏–º–æ—Å—Ç—å: {prize['value']:,}‚ÇΩ\n\n"
        total_value += prize['value']
    
    prizes_text += f"üèÜ **–û–ë–©–ê–Ø –°–¢–û–ò–ú–û–°–¢–¨ –ü–†–ò–ó–û–í: {total_value:,}‚ÇΩ**\n\n"
    prizes_text += "üéØ **–ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å:**\n"
    prizes_text += "1Ô∏è‚É£ –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ Telegram-–ø–∞–ø–∫—É\n"
    prizes_text += "2Ô∏è‚É£ –ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π\n"
    prizes_text += "3Ô∏è‚É£ –í—ã–ø–æ–ª–Ω–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏\n\n"
    prizes_text += "‚è∞ **–î–µ–¥–ª–∞–π–Ω:** 10 –∏—é–ª—è 2025, 20:00"
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üìÅ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–∞–ø–∫—É",
        url=GIVEAWAY_LINK
    ))
    builder.add(InlineKeyboardButton(
        text="üåü –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ",
        web_app=WebAppInfo(url=WEBAPP_URL)
    ))
    # –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫—É Open FSR
    await message.answer(prizes_text, reply_markup=builder.as_markup(), parse_mode=ParseMode.MARKDOWN)

@dp.message(Command("invite"))
async def cmd_invite(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /invite –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –¥—Ä—É–∑–µ–π"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    asyncio.create_task(telegram_logger.log_user_action(
        user_id, username, first_name, "invite", "User requested invite friends"
    ))
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    ref_info = db.get_user_referral_info(user_id)
    
    if not ref_info:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
        return
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
    invite_text = f"""
üéØ **–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å—ã!**

üë• **–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ: {ref_info['successful_invites']} –¥—Ä—É–∑–µ–π
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ XP: {ref_info['total_referral_xp']}
‚Ä¢ –¢–≤–æ–π –∫–æ–¥: `{ref_info['referral_code']}`

üéÅ **–ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞:**
‚Ä¢ +100 XP —Ç–µ–±–µ
‚Ä¢ +100 XP –¥—Ä—É–≥—É
‚Ä¢ –®–∞–Ω—Å –≤—ã–∏–≥—Ä–∞—Ç—å –ø—Ä–∏–∑—ã

üí¨ **–¢–µ–∫—Å—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥—Ä—É–∑—å—è–º:**
```
üî• –ü—Ä–∏–≤–µ—Ç! –ù–∞—à–µ–ª –∫—Ä—É—Ç—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞—Ä—Ç–∏—Å—Ç–æ–≤ - Fresh Style Russia!

üéØ –ß—Ç–æ —Ç—É—Ç –µ—Å—Ç—å:
‚Ä¢ AI-–ø–æ–∏—Å–∫ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ —Ñ–æ—Ç–æ
‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∞—Ä—Ç–∏—Å—Ç–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º  
‚Ä¢ –†–æ–∑—ã–≥—Ä—ã—à –Ω–∞ 170,000‚ÇΩ
‚Ä¢ –ë—å—é—Ç–∏-—É—Å–ª—É–≥–∏ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã

üéÅ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å—ã:
{ref_info['referral_link']}

üíé –í–º–µ—Å—Ç–µ –≤—ã–∏–≥—Ä–∞–µ–º –ø—Ä–∏–∑—ã! üöÄ
```

üì± **–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –≤—ã–±–æ—Ä–∞ –¥—Ä—É–∑–µ–π:**
    """
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π",
        web_app=WebAppInfo(url=f"{WEBAPP_URL}/invite?ref={ref_info['referral_code']}")
    ))
    builder.add(InlineKeyboardButton(
        text="üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
        callback_data="my_stats"
    ))
    
    await message.answer(invite_text, reply_markup=builder.as_markup(), parse_mode=ParseMode.MARKDOWN)

@dp.message(Command("stats"))
async def cmd_stats(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /stats (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    if user_id not in admin_ids:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ")
        return
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    asyncio.create_task(telegram_logger.log_user_action(
        user_id, username, first_name, "admin_stats", "Admin requested stats"
    ))
    
    # –ü–æ–ª—É—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    global_stats = db.get_global_stats()
    
    stats_text = f"""
üìä **–°–¢–ê–¢–ò–°–¢–ò–ö–ê FSR –ë–û–¢–ê**

üë• **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:**
‚Ä¢ –í—Å–µ–≥–æ: {global_stats.get('total_users', 0)}
‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞ 7 –¥–Ω–µ–π: {global_stats.get('active_users_7d', 0)}
‚Ä¢ –ó–∞–≤–µ—Ä—à–∏–ª–∏ –≥–∏–≤–µ–≤–µ–π: {global_stats.get('giveaway_completed', 0)}

üì∏ **–ó–∞–≥—Ä—É–∑–∫–∏:**
‚Ä¢ –í—Å–µ–≥–æ —Ñ–æ—Ç–æ: {global_stats.get('total_photos', 0)}

üë• **–†–µ—Ñ–µ—Ä–∞–ª—ã:**
‚Ä¢ –í—Å–µ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: {global_stats.get('total_referrals', 0)}

üéØ **–¢–æ–ø —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤:**
{await get_top_referrers()}
    """
    
    await message.answer(stats_text, parse_mode=ParseMode.MARKDOWN)

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ
    asyncio.create_task(telegram_logger.log_user_action(
        user_id, username, first_name, "help", "User requested help"
    ))
    
    help_text = """
<b>ü§ñ FSR Bot - –°–ø—Ä–∞–≤–∫–∞</b>

<b>üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ <code>/start</code> - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ –∏ –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
‚Ä¢ <code>/giveaway</code> - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –ø—Ä–∏–∑–æ–≤
‚Ä¢ <code>/invite</code> - –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å—ã
‚Ä¢ <code>/help</code> - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É

<b>üéØ –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>
1. –ù–∞–∂–º–∏ <b>Open FSR</b> —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
2. –í—ã–±–µ—Ä–∏ —Ä–æ–ª—å (–∫–ª–∏–µ–Ω—Ç/–∞—Ä—Ç–∏—Å—Ç)
3. –ò—Å–ø–æ–ª—å–∑—É–π AI-–ø–æ–∏—Å–∫ –∏–ª–∏ –∫–∞—Ç–∞–ª–æ–≥
4. –£—á–∞—Å—Ç–≤—É–π –≤ –≥–∏–≤–µ–≤–µ–µ –∏ –ø—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π

<b>üéÅ –ü—Ä–∏–∑—ã –≥–∏–≤–µ–≤–µ—è:</b>
‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ó–æ–ª–æ—Ç–æ–µ –Ø–±–ª–æ–∫–æ - 20,000‚ÇΩ
‚Ä¢ –ë—å—é—Ç–∏-—É—Å–ª—É–≥–∏ - 100,000‚ÇΩ
‚Ä¢ Telegram Premium (3 –º–µ—Å) - 3,500‚ÇΩ
‚Ä¢ <b>üèÜ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –ø—Ä–∏–∑–æ–≤: 123,500‚ÇΩ</b>

<b>üé´ –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–∏–ª–µ—Ç—ã:</b>
‚Ä¢ 1 –±–∏–ª–µ—Ç ‚Äî –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ Telegram-–ø–∞–ø–∫—É
‚Ä¢ +1 –±–∏–ª–µ—Ç ‚Äî –∑–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ

<b>üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞:</b> @FSR_Adminka
    """
    
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="üåü Open FSR",
        web_app=WebAppInfo(url=WEBAPP_URL)
    ))
    
    await message.answer(help_text, reply_markup=builder.as_markup(), parse_mode=ParseMode.HTML)

@dp.callback_query(lambda c: c.data == "my_stats")
async def callback_my_stats(callback: types.CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞'"""
    user_id = callback.from_user.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_stats = db.get_user_stats(user_id)
    ref_info = db.get_user_referral_info(user_id)
    
    if not user_stats or not ref_info:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
        return
    
    stats_text = f"""
üìä **–¢–≤–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞**

üë§ **–ü—Ä–æ—Ñ–∏–ª—å:**
‚Ä¢ –ò–º—è: {user_stats['first_name'] or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
‚Ä¢ Username: @{user_stats['username'] or '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {user_stats['registered_at'][:10]}

üéØ **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:**
‚Ä¢ –ó–∞–¥–∞–Ω–∏–π –≤—ã–ø–æ–ª–Ω–µ–Ω–æ: {user_stats['tasks_completed']}
‚Ä¢ –§–æ—Ç–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {user_stats['photos_uploaded']}
‚Ä¢ –ì–∏–≤–µ–≤–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω: {'‚úÖ' if user_stats['giveaway_completed'] else '‚ùå'}

üë• **–†–µ—Ñ–µ—Ä–∞–ª—ã:**
‚Ä¢ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: {ref_info['successful_invites']}
‚Ä¢ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ XP: {ref_info['total_referral_xp']}
‚Ä¢ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: `{ref_info['referral_code']}`

üéÅ **–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:**
`{ref_info['referral_link']}`
    """
    
    await callback.message.edit_text(stats_text, parse_mode=ParseMode.MARKDOWN)

async def get_top_referrers() -> str:
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"""
    try:
        conn = db.db_path
        import sqlite3
        conn = sqlite3.connect(conn)
        cursor = conn.cursor()
        
        cursor.execute('''
            SELECT u.username, u.first_name, u.referral_count, u.total_referral_xp
            FROM users u
            WHERE u.referral_count > 0
            ORDER BY u.referral_count DESC, u.total_referral_xp DESC
            LIMIT 5
        ''')
        
        top_referrers = []
        for row in cursor.fetchall():
            username = row[0] or row[1] or "Unknown"
            top_referrers.append(f"‚Ä¢ {username}: {row[2]} –¥—Ä—É–∑–µ–π, {row[3]} XP")
        
        conn.close()
        
        if top_referrers:
            return "\n".join(top_referrers)
        else:
            return "–ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤"
            
    except Exception as e:
        print(f"Error getting top referrers: {e}")
        return "–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö"

# –ù–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ shareMessage
@dp.message(Command("save_message"))
async def cmd_save_message(message: types.Message):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ Web App"""
    try:
        # –°–æ–∑–¥–∞–µ–º inline query result –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
        from aiogram.types import InlineQueryResultArticle, InputTextMessageContent
        
        result = InlineQueryResultArticle(
            id="invite_message",
            title="–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ FSR",
            description="–ü—Ä–∏–≥–ª–∞—Å–∏ –¥—Ä—É–∑–µ–π –≤ Fresh Style Russia",
            input_message_content=InputTextMessageContent(
                message_text=f"""
üî• <b>–ü—Ä–∏–≤–µ—Ç! –ù–∞—à–µ–ª –∫—Ä—É—Ç—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞—Ä—Ç–∏—Å—Ç–æ–≤ - Fresh Style Russia!</b>

üéØ <b>–ß—Ç–æ —Ç—É—Ç –µ—Å—Ç—å:</b>
‚Ä¢ AI-–ø–æ–∏—Å–∫ –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ —Ñ–æ—Ç–æ
‚Ä¢ –ö–∞—Ç–∞–ª–æ–≥ –∞—Ä—Ç–∏—Å—Ç–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º  
‚Ä¢ –†–æ–∑—ã–≥—Ä—ã—à –Ω–∞ 170,000‚ÇΩ
‚Ä¢ –ë—å—é—Ç–∏-—É—Å–ª—É–≥–∏ –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã

üéÅ <b>–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –ø–æ –º–æ–µ–π —Å—Å—ã–ª–∫–µ –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å—ã:</b>
<a href="https://t.me/FSRUBOT?start=ref{message.from_user.id}">üöÄ –û—Ç–∫—Ä—ã—Ç—å FSR</a>

üíé <b>–í–º–µ—Å—Ç–µ –≤—ã–∏–≥—Ä–∞–µ–º –ø—Ä–∏–∑—ã!</b>

#FSR #FreshStyleRussia #Giveaway
                """,
                parse_mode=ParseMode.HTML
            )
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        prepared_message = await bot.save_prepared_inline_message(
            user_id=message.from_user.id,
            result=result,
            allow_user_chats=True,
            allow_bot_chats=False,
            allow_group_chats=True,
            allow_channel_chats=False
        )
        
        await message.answer(
            f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! ID: {prepared_message.id}\n"
            f"‚è∞ –ò—Å—Ç–µ–∫–∞–µ—Ç: {prepared_message.expiration_date}",
            parse_mode=ParseMode.MARKDOWN
        )
        
    except Exception as e:
        logger.error(f"Error saving prepared message: {e}")
        await message.answer("‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è")

@dp.message(Command("test_share"))
async def cmd_test_share(message: types.Message):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Web App"""
    try:
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        from aiogram.types import InlineQueryResultArticle, InputTextMessageContent
        
        result = InlineQueryResultArticle(
            id="test_invite",
            title="–¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ",
            description="–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ shareMessage",
            input_message_content=InputTextMessageContent(
                message_text="üî• –¢–µ—Å—Ç–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –≤ FSR! üöÄ",
                parse_mode=ParseMode.HTML
            )
        )
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏ —Å—Ä–∞–∑—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
        prepared_message = await bot.save_prepared_inline_message(
            user_id=message.from_user.id,
            result=result,
            allow_user_chats=True,
            allow_group_chats=True
        )
        
        await message.answer(
            f"‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!\n"
            f"ID: `{prepared_message.id}`\n\n"
            f"–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å shareMessage –≤ Web App",
            parse_mode=ParseMode.MARKDOWN
        )
        
    except Exception as e:
        logger.error(f"Error in test share: {e}")
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")

@dp.message()
async def handle_all_messages(message: types.Message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = message.from_user.id
    username = message.from_user.username
    first_name = message.from_user.first_name
    
    # –õ–æ–≥–∏—Ä—É–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    asyncio.create_task(telegram_logger.log_user_action(
        user_id, username, first_name, "message_sent", f"User sent message: {message.text[:50]}{'...' if len(message.text) > 50 else ''}"
    ))
    
    await db.update_user_activity(user_id, "message_sent")
    
    # –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –∫–∞–∂–¥—ã–µ 100 —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    if message.message_id % 100 == 0:
        gc.collect()
        logger.info(f"üßπ –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ (—Å–æ–æ–±—â–µ–Ω–∏–µ #{message.message_id})")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Mini App
    await message.answer(
        "üåü –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å FSR Mini App:",
        reply_markup=get_webapp_keyboard()
    )

async def check_bot_admin_status():
    channel_id = -1001973736826
    try:
        me = await bot.get_me()
        member = await bot.get_chat_member(chat_id=channel_id, user_id=me.id)
        if member.status in ['administrator', 'creator']:
            logger.info(f"‚úÖ –ë–æ—Ç —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")
        else:
            logger.error(f"‚ùå –ë–æ—Ç –ù–ï –∞–¥–º–∏–Ω –≤ –∫–∞–Ω–∞–ª–µ {channel_id}")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω—Å—Ç–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ {channel_id}: {e}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    logger.info("–ó–∞–ø—É—Å–∫ FSR Telegram Bot...")
    print("üöÄ –ó–∞–ø—É—Å–∫ FSR Telegram Bot...")
    print(f"üåê WebApp URL: {WEBAPP_URL}")
    print(f"üìÅ Giveaway Link: {GIVEAWAY_LINK}")
    print("=" * 50)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω—Å—Ç–≤–∞ –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ
    await check_bot_admin_status()

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
    await set_bot_commands()

    # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ Telegram
    try:
        await telegram_logger.log_bot_start()
    except Exception as e:
        logger.error(f"Error logging bot start: {e}")
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main()) 